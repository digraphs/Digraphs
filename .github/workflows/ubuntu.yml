name: Ubuntu
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - stable-*.*
  schedule:
    # Every day at 3:30 AM UTC
    - cron: 30 3 * * *

env:
  DIGRAPHS_LIB: digraphs-lib-0.7

concurrency:
  # Group by workflow and ref; the last component ensures that for pull requests
  # we limit to one concurrent job, but for the default/stable branch we don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ (github.ref != github.event.repository.default_branch && !startsWith(github.ref, 'refs/heads/stable-')) || github.run_number }}
  # Only cancel intermediate pull request builds
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test-unix:
    name: "GAP ${{ matrix.gap-version }} / ${{ matrix.mode == 'onlyneeded' && 'only needed' || 'needed+suggested' }} packages"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        gap-version:
          - master
          - stable-4.15
          - v4.14
          - v4.13
          - v4.12
          - v4.11
        mode:
          - onlyneeded
          - default
        include:
          - mode: onlyneeded
            pkgs-to-clone: https://github.com/digraphs/graphviz.git
            # Remove asterisks * when we no longer support GAP 4.11
            pkgs-to-build: io* orb* datastructures* profiling*
          - mode: default
            pkgs-to-clone: https://github.com/digraphs/graphviz.git https://github.com/gap-packages/NautyTracesInterface.git
            # Remove asterisks * when we no longer support GAP 4.11
            pkgs-to-build: io* orb* datastructures* profiling* grape* NautyTracesInterface

    steps:
      - uses: actions/checkout@v5
      - name: Output g++ version . . .
        run: g++ --version
      - name: "Install GAP . . ."
        uses: gap-actions/setup-gap@v3
        with:
          gap-version: ${{ matrix.gap-version }}
      - name: "Install necessary GAP package clones . . ."
        run: |
          for PKG in ${{ matrix.pkgs-to-clone }}; do
            cd ${GAPROOT}/pkg
            git clone $PKG
          done
      - name: "Build additional necessary GAP packages . . ."
        run: |
          cd ${GAPROOT}/pkg
          ../bin/BuildPackages.sh --strict ${{ matrix.pkgs-to-build }}
      - name: Build Digraphs . . .
        uses: gap-actions/build-pkg@v2
      - name: Install digraphs-lib . . .
        run: |
          curl --retry 5 -L -O "https://digraphs.github.io/Digraphs/${{ env.DIGRAPHS_LIB }}.tar.gz"
          tar xf "${{ env.DIGRAPHS_LIB }}.tar.gz"
      - name: Run DigraphsTestInstall . . .
        uses: gap-actions/run-pkg-tests@v4
        with:
          testfile: tst/github_actions/install.g
          mode: ${{ matrix.mode }}
      - name: Run DigraphsTestStandard . . .
        uses: gap-actions/run-pkg-tests@v4
        with:
          testfile: tst/github_actions/standard.g
          mode: ${{ matrix.mode }}
      - name: Run DigraphsTestManualExamples . . .
        uses: gap-actions/run-pkg-tests@v4
        with:
          testfile: tst/github_actions/examples.g
          mode: ${{ matrix.mode }}
      - name: Run DigraphsTestExtreme . . .
        uses: gap-actions/run-pkg-tests@v4
        with:
          testfile: tst/github_actions/extreme.g
          mode: ${{ matrix.mode }}
      - uses: gap-actions/process-coverage@v3
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
