#
# Makefile rules for the digraphs package
#
KEXT_NAME = digraphs

KEXT_CFLAGS = @CODE_COVERAGE_CFLAGS@ @WARNING_CFLAGS@
KEXT_CXXFLAGS = @CODE_COVERAGE_CXXFLAGS@ @WARNING_CXXFLAGS@
KEXT_LDFLAGS = @CODE_COVERAGE_LDFLAGS@

KEXT_LDFLAGS += -lstdc++  # for bliss: add C++ library

# configure settings
GAPPATH = @GAPROOT@
WITH_INCLUDED_BLISS = @WITH_INCLUDED_BLISS@
WITH_INCLUDED_PLANARITY = @WITH_INCLUDED_PLANARITY@
PLANARITY_SUITE_DIR = @PLANARITY_SUITE_DIR@

# sources
KEXT_SOURCES =  src/digraphs.c
KEXT_SOURCES += src/bitarray.c
KEXT_SOURCES += src/conditions.c
KEXT_SOURCES += src/homos.c
KEXT_SOURCES += src/cliques.c
KEXT_SOURCES += src/homos-graphs.c
KEXT_SOURCES += src/perms.c
KEXT_SOURCES += src/planar.c
KEXT_SOURCES += src/schreier-sims.c
KEXT_SOURCES += src/safemalloc.c

ifdef WITH_INCLUDED_BLISS
  KEXT_SOURCES += extern/bliss-0.73/defs.cc
  KEXT_SOURCES += extern/bliss-0.73/graph.cc
  KEXT_SOURCES += extern/bliss-0.73/partition.cc
  KEXT_SOURCES += extern/bliss-0.73/orbit.cc
  KEXT_SOURCES += extern/bliss-0.73/uintseqhash.cc
  KEXT_SOURCES += extern/bliss-0.73/heap.cc
  KEXT_SOURCES += extern/bliss-0.73/timer.cc
  KEXT_SOURCES += extern/bliss-0.73/utils.cc
  KEXT_SOURCES += extern/bliss-0.73/bliss_C.cc

  KEXT_CFLAGS += -Iextern
else
  KEXT_LDFLAGS += -lbliss
endif


ifdef WITH_INCLUDED_PLANARITY

  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/graphDFSUtils.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/graphUtils.c

  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/extensionSystem/graphExtensions.c

  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/homeomorphSearch/graphK23Search.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/homeomorphSearch/graphK23Search_Extensions.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/homeomorphSearch/graphK33Search.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/homeomorphSearch/graphK33Search_Extensions.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/homeomorphSearch/graphK4Search.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/homeomorphSearch/graphK4Search_Extensions.c

  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/io/g6-api-utilities.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/io/g6-read-iterator.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/io/g6-write-iterator.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/io/graphIO.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/io/strOrFile.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/io/strbuf.c

  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/lowLevelUtils/apiutils.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/lowLevelUtils/listcoll.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/lowLevelUtils/stack.c

  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/planarityRelated/graphDrawPlanar.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/planarityRelated/graphDrawPlanar_Extensions.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/planarityRelated/graphEmbed.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/planarityRelated/graphIsolator.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/planarityRelated/graphNonplanar.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/planarityRelated/graphOuterplanarObstruction.c
  KEXT_SOURCES += $(PLANARITY_SUITE_DIR)/c/graphLib/planarityRelated/graphTests.c

  KEXT_CFLAGS += -I$(PLANARITY_SUITE_DIR)
else
  KEXT_LDFLAGS += -lplanarity
endif


# include shared GAP package build system
KEXT_USE_AUTOCONF = 1
include Makefile.gappkg

# ensure pkgconfig.h is built
$(KEXT_OBJS): gen/pkgconfig.h

clean:
	find . -name '*.gcda' -delete

distclean:
	rm -f *.tmp
	rm -f coverage.info
	rm -rf coverage/*
	rm -rf bin/*

lint:
	etc/gaplint.sh
	etc/cpplint.sh

format:
	clang-format -i src/*.[hc]

.PHONY: debug lint format

superclean: distclean
	git clean -xdf --exclude *.swp --exclude *.swo
.PHONY: superclean
